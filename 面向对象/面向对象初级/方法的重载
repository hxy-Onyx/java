1. 方法重载的条件
在 Java 中，方法重载的核心条件是：
方法名称必须相同。
参数列表必须不同。这包括参数的数量不同、参数的数据类型不同，或者参数的顺序不同。

方法重载的形式：
不同数量的参数
参数类型不同
参数顺序不同（针对多个参数）
2. 方法重载的示例
示例 1：不同参数个数的重载

public class Calculator {

    // 重载方法：计算两个整数的和
    public int add(int a, int b) {
        return a + b;
    }

    // 重载方法：计算三个整数的和
    public int add(int a, int b, int c) {
        return a + b + c;
    }
    
    public static void main(String[] args) {
        Calculator calc = new Calculator();
        System.out.println(calc.add(10, 20));        // 调用第一个 add 方法
        System.out.println(calc.add(10, 20, 30));    // 调用第二个 add 方法
    }
}


示例 2：参数类型不同的重载

public class Printer {

    // 重载方法：打印整数
    public void print(int number) {
        System.out.println("Printing an integer: " + number);
    }

    // 重载方法：打印字符串
    public void print(String text) {
        System.out.println("Printing a string: " + text);
    }
    
    public static void main(String[] args) {
        Printer printer = new Printer();
        printer.print(100);          // 调用 print(int)
        printer.print("Hello");      // 调用 print(String)
    }
}


示例 3：参数顺序不同的重载

public class Example {

    // 重载方法：两个参数，顺序为 int 和 String
    public void display(int number, String text) {
        System.out.println("Number: " + number + ", Text: " + text);
    }

    // 重载方法：两个参数，顺序为 String 和 int
    public void display(String text, int number) {
        System.out.println("Text: " + text + ", Number: " + number);
    }
    
    public static void main(String[] args) {
        Example ex = new Example();
        ex.display(10, "Java");       // 调用 display(int, String)
        ex.display("Hello", 100);     // 调用 display(String, int)
    }
}





